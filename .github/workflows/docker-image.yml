name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOTNET_VERSION: '8.0.x'

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper analysis
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    # Add .NET code analysis
    - name: Run .NET Code Analysis
      run: |
        dotnet tool install --global dotnet-format
        dotnet format --verify-no-changes --verbosity diagnostic
        dotnet build /p:EnableNETAnalyzers=true /p:EnforceCodeStyleInBuild=true /p:AnalysisLevel=latest --no-restore

    # Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: csharp
    
    # Security scanning using OWASP Dependency Check
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'adopt'
      
    - name: OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'IPTV Scheduler'
        path: '.'
        format: 'HTML'
        out: 'reports'
    
    - name: Upload dependency analysis results
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: ${{ github.workspace }}/reports
          
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal

    # Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: Log in to the Container registry
      if: github.event_name != 'pull_request' && success()
      uses: docker/login-action@v3.4.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      if: success()
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}
          
    - name: Build and push Docker image
      if: github.event_name != 'pull_request' && success()
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
